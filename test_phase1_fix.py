#!/usr/bin/env python3
"""
Test Phase 1 Auto Buy Logic Fix
Tests the correct behavior: Buy 492 ‚Üí SL 482 ‚Üí Sell 482 ‚Üí Auto Buy 492 ‚Üí SL 482
"""

def test_phase1_auto_buy_fix():
    """Test Phase 1 auto buy logic with correct trigger and stop loss"""
    
    # Simulate manual buy
    position = {
        'strike': 55500,
        'type': 'CE',
        'manual_buy_price': 492.80,
        'buy_price': 492.80,
        'original_buy_price': 492.80,
        'current_price': 492.80,
        'highest_price': 492.80,
        'stop_loss_price': 482.80,  # manual_buy_price - 10
        'advanced_stop_loss': 482.80,
        'algorithm_phase': 1,
        'waiting_for_autobuy': False,
        'auto_buy_count': 0
    }
    
    print("üß™ PHASE 1 AUTO BUY FIX TEST")
    print("=" * 50)
    print(f"üìä MANUAL BUY:")
    print(f"   Buy Price: ‚Çπ{position['manual_buy_price']}")
    print(f"   Stop Loss: ‚Çπ{position['stop_loss_price']}")
    print()
    
    # Simulate stop loss trigger (price drops to 482)
    position['current_price'] = 482.00
    position['waiting_for_autobuy'] = True
    
    # üö® CRITICAL FIX: Phase 1 auto buy trigger = manual_buy_price (NOT stop loss price)
    position['last_stop_loss_price'] = position['manual_buy_price']  # 492.80
    
    print(f"üî¥ STOP LOSS TRIGGERED:")
    print(f"   Sell Price: ‚Çπ{position['current_price']}")
    print(f"   Auto Buy Trigger: ‚Çπ{position['last_stop_loss_price']}")
    print()
    
    # Simulate price going back to manual buy level
    test_prices = [485.0, 490.0, 492.80, 495.0]
    
    for test_price in test_prices:
        position['current_price'] = test_price
        auto_buy_trigger = position['last_stop_loss_price']
        
        will_auto_buy = (position['waiting_for_autobuy'] and 
                        position['current_price'] >= auto_buy_trigger)
        
        print(f"üìà Price ‚Çπ{test_price}:")
        print(f"   Trigger: ‚Çπ{auto_buy_trigger}")
        print(f"   Will Auto Buy: {'‚úÖ YES' if will_auto_buy else '‚ùå NO'}")
        
        if will_auto_buy:
            # Simulate auto buy execution
            auto_buy_price = position['manual_buy_price']  # Phase 1: buy at manual price
            manual_buy_price = position['manual_buy_price']
            
            # üö® FIXED STOP LOSS: Remains at original manual level
            new_stop_loss = manual_buy_price - 10  # 492.80 - 10 = 482.80
            
            print(f"   ü§ñ AUTO BUY EXECUTED:")
            print(f"      Auto Buy Price: ‚Çπ{auto_buy_price}")
            print(f"      New Stop Loss: ‚Çπ{new_stop_loss} (manual ‚Çπ{manual_buy_price} - 10)")
            print()
            
            # Verify correctness
            expected_trigger = 492.80
            expected_buy_price = 492.80
            expected_stop_loss = 482.80
            
            correct_trigger = auto_buy_trigger == expected_trigger
            correct_buy = auto_buy_price == expected_buy_price  
            correct_sl = new_stop_loss == expected_stop_loss
            
            print(f"üîç VERIFICATION:")
            print(f"   Trigger ‚Çπ{auto_buy_trigger} == ‚Çπ{expected_trigger}: {'‚úÖ' if correct_trigger else '‚ùå'}")
            print(f"   Buy ‚Çπ{auto_buy_price} == ‚Çπ{expected_buy_price}: {'‚úÖ' if correct_buy else '‚ùå'}")
            print(f"   SL ‚Çπ{new_stop_loss} == ‚Çπ{expected_stop_loss}: {'‚úÖ' if correct_sl else '‚ùå'}")
            
            all_correct = correct_trigger and correct_buy and correct_sl
            print(f"\nüéØ TEST RESULT: {'‚úÖ PASSED' if all_correct else '‚ùå FAILED'}")
            break
        print()
    
    print("\nüí° EXPECTED BEHAVIOR:")
    print("   1. Manual Buy ‚Çπ492.80 ‚Üí Stop Loss ‚Çπ482.80")
    print("   2. Price drops ‚Üí Sell at ‚Çπ482")
    print("   3. Auto Buy triggers when price reaches ‚Çπ492.80 again")
    print("   4. Auto Buy at ‚Çπ492.80 ‚Üí Stop Loss remains ‚Çπ482.80")
    print("   5. No more rapid fire cycles!")

if __name__ == "__main__":
    test_phase1_auto_buy_fix()